{"version":3,"sources":["pages/HomePage/Elin Forsberg.pdf","pages/HomePage/CV-FOTO.png","pages/Projects/carbon.PNG","pages/Projects/ikea.png","pages/Projects/flight1.PNG","pages/Projects/chat.PNG","pages/Footer/footer.js","pages/Projects/projects.js","pages/HomePage/home.js","history.js","pages/About/about.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","id","className","carbon","require","ikea","flight","chat","Projects","Fragment","src","alt","style","width","HomeScreen","history","useHistory","scrollToRef","ref","window","scrollTo","top","current","offsetTop","behavior","myRef","useRef","myRef3","foto","href","class","target","onClick","method","action","pdf","type","About","Router","exact","path","component","Home","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f808d7ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Elin Forsberg.11eda4a3.pdf\";","module.exports = __webpack_public_path__ + \"static/media/CV-FOTO.90d94db6.png\";","module.exports = __webpack_public_path__ + \"static/media/carbon.07fc946e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/ikea.9df15e03.png\";","module.exports = __webpack_public_path__ + \"static/media/flight1.4d7e8098.PNG\";","module.exports = __webpack_public_path__ + \"static/media/chat.695ee4f8.PNG\";","import React, {useState, useEffect} from 'react'\r\nimport {withRouter, NavLink, Link } from 'react-router-dom'\r\nimport './footer.css'\r\nconst Footer = () => {\r\nreturn (\r\n    <nav\r\n      id='navBar'\r\n      className='navbar navbar-expand-lg navbar-light bg-light'\r\n    >   \r\n    <div id=\"footer\">\r\n        <p id=\"copyright\">\r\n        Â©2019 by Elin Forsberg\r\n        </p>\r\n        <h1 id='FooterLeft'>\r\n          forsbergselin@gmail.com\r\n        </h1>\r\n        </div>\r\n      </nav>\r\n      \r\n)}\r\n\r\nexport default withRouter(Footer)","import React, {useState, useEffect} from 'react'\r\nimport Footer from '../Footer/footer'\r\nimport \"../style.css\"\r\nimport Home from '../HomePage/home'\r\nvar carbon = require('./carbon.PNG')\r\nvar ikea = require('./ikea.png')\r\nvar flight = require('./flight1.PNG')\r\nvar chat = require('./chat.PNG')\r\nconst Projects = () =>{\r\n\r\n\r\n\r\nreturn(\r\n    <React.Fragment>\r\n    <div className=\"projects\">\r\n        <div>\r\n    <h2>RECENT PROJECTS</h2>\r\n    </div>\r\n        <div className=\"card\">\r\n            <img  className = \"image\" src={flight} alt=\"Avatar\" style={{width:\"100%\"}}></img>\r\n            <div className=\"overlay\"></div>\r\n                <div className=\"text\">Description of work</div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n            <img className = \"image\" src={ikea} alt=\"Avatar\" style={{width:\"100%\"}}></img>\r\n            <div className=\"overlay\"></div> \r\n                <div className=\"text\">Description of work</div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n            <img className = \"image\" src={carbon} alt=\"Avatar\" style={{width:\"100%\"}}></img>\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"text\">Description of work</div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n            <img className = \"image\" src={chat} alt=\"Avatar\" style={{width:\"100%\"}}></img>\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"text\">Description of work</div>\r\n        </div>\r\n\r\n        \r\n\r\n    </div>\r\n    </React.Fragment>\r\n  )}\r\n  export default Projects;","import React, {useState, useEffect} from 'react'\r\n//import TopMenu from '../TopMenu/TopMenu'\r\nimport '../style.css'\r\nimport { useRef, useLayoutEffect } from 'react'\r\nimport pdf from './Elin Forsberg.pdf'\r\nimport foto from './CV-FOTO.png'\r\nimport Footer from '../Footer/footer'\r\nimport Projects from '../Projects/projects'\r\nimport history from '../../history'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\nconst HomeScreen = () => {\r\n\r\n  let history = useHistory();\r\n    \r\n  /*const [showOverlay, setShowOverlay] = useState(\r\n    showOverlay ? 'display' : 'none'\r\n  )*/\r\n  const Redirect1 = () =>{\r\n\r\n    history.push(\"/projects\");\r\n  }\r\n  const Redirect2 = () =>{\r\n\r\n    history.push(\"/about\");\r\n  }\r\n\r\n  const scrollToRef = (ref) => window.scrollTo({\r\n    top: ref.current.offsetTop,\r\n    behavior: 'smooth'     \r\n})   \r\n\r\n  \r\n    const myRef = useRef(null)\r\n    const myRef2 = useRef(null)\r\n    const myRef3 = useRef(null)\r\n\r\n    const executeScroll = () => {scrollToRef(myRef)}\r\n    const executeScroll2 = () => {scrollToRef(myRef2)}\r\n    const executeScroll3 = () => {scrollToRef(myRef3)}\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n          \r\n            <div id=\"intro\" className=\"intro\" ref={myRef3}>\r\n                <img id=\"intro_img\" src={foto}></img>\r\n                <h1>ELIN FORSBERG</h1>\r\n                <div className=\"button_container\">\r\n                  <a href=\"#\">\r\n                <i class=\"fab fa-linkedin\"></i>\r\n                </a>\r\n                <a href=\"#\">\r\n                <i class=\"fab fa-github-square\"></i>\r\n                </a>\r\n                <a  href=\"mailto:forsbergselin@gmail.com\" target=\"_blank\">\r\n                <i class=\"fas fa-envelope-square\"></i>\r\n                </a>\r\n                </div>\r\n                \r\n                <div className=\"description\">\r\n                A soon graduating M.Sc. student in Interactive Media Technology. Passionate about service- and user experience design, as well as the technology behind it. \r\n                I'm interested in making digital products accessible and valueable for users and I am passionate about defining problems to solve through iterative design processes.\r\n                </div>\r\n                <div className=\"button_container\">\r\n                  {/*<button className=\"button\" onClick={() => Redirect1()}>PROJECTS</button>-->\r\n                    <button className=\"button\" onClick={() => Redirect2()}>ABOUT ME</button>*/}\r\n                    <button className=\"button\" onClick={executeScroll}>PROJECTS</button>\r\n                    <button className=\"button\" >ABOUT</button> {/*onClick={executeScroll2}*/}\r\n                    <form method=\"get\" action={pdf}  target=\"_blank\">\r\n                        <button className=\"button\" type=\"submit\">DOWNLOAD CV</button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"column left\">\r\n                <div ref={myRef}>\r\n                <Projects/>\r\n                </div>\r\n                {/* \r\n                <div ref={myRef2} className=\"TEST\">\r\n                  <h1>TESTAR SCROLL</h1>\r\n                </div>\r\n                */}\r\n              </div>\r\n              <div className=\"column right\">\r\n                <button className=\"button2 up\" onClick={executeScroll3}>\r\n                  <i class=\"fas fa-chevron-circle-up\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <Footer/>\r\n          </React.Fragment>\r\n    )\r\n}\r\nexport default HomeScreen;","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, {useState, useEffect} from 'react'\r\nimport Footer from '../Footer/footer'\r\nimport \"../style.css\"\r\n\r\n\r\nconst About = () =>{\r\n\r\n\r\nreturn(\r\n    <React.Fragment>\r\n\r\n    <Footer></Footer>\r\n    </React.Fragment>\r\n  )}\r\n  export default About;","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nimport Home from './pages/HomePage/home'\r\nimport Projects from './pages/Projects/projects'\r\nimport About from './pages/About/about'\r\n\r\nconst Router = () => {\r\n  return (\r\n\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route exact path='/projects' component={Projects}/>\r\n      <Route exact path='/about' component={About}/>\r\n    </Switch>\r\n\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import React from 'react'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport Router from './Router'\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n//import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter>\r\n        <div className='App'>\r\n          <Router />\r\n        </div>\r\n      </BrowserRouter>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}