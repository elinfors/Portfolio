{"version":3,"file":"react-collapsed.cjs.development.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import {\n  RefObject,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useLayoutEffect,\n} from 'react';\nimport warning from 'tiny-warning';\nimport { AssignableRef } from './types';\n\ntype AnyFunction = (...args: any[]) => unknown;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = (): void => {};\n\nexport function getElementHeight(\n  el: RefObject<HTMLElement> | { current?: { scrollHeight: number } }\n): string | number {\n  if (!el?.current) {\n    warning(\n      true,\n      `useCollapse was not able to find a ref to the collapse element via \\`getCollapseProps\\`. Ensure that the element exposes its \\`ref\\` prop. If it exposes the ref prop under a different name (like \\`innerRef\\`), use the \\`refKey\\` property to change it. Example:\n\n{...getCollapseProps({refKey: 'innerRef'})}`\n    );\n    return 'auto';\n  }\n  return el.current.scrollHeight;\n}\n\n// Helper function for render props. Sets a function to be called, plus any additional functions passed in\nexport const callAll = (...fns: AnyFunction[]) => (...args: any[]): void =>\n  fns.forEach((fn) => fn && fn(...args));\n\n// https://github.com/mui-org/material-ui/blob/da362266f7c137bf671d7e8c44c84ad5cfc0e9e2/packages/material-ui/src/styles/transitions.js#L89-L98\nexport function getAutoHeightDuration(height: number | string): number {\n  if (!height || typeof height === 'string') {\n    return 0;\n  }\n\n  const constant = height / 36;\n\n  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  value: any\n) {\n  if (ref == null) return;\n  if (typeof ref === 'function') {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`);\n    }\n  }\n}\n\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\nexport function mergeRefs<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  if (refs.every((ref) => ref == null)) {\n    return null;\n  }\n  return (node: any) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\n\nexport function useControlledState(\n  isExpanded?: boolean,\n  defaultExpanded?: boolean\n): [boolean, React.Dispatch<React.SetStateAction<boolean>>] {\n  const [stateExpanded, setStateExpanded] = useState(defaultExpanded || false);\n  const initiallyControlled = useRef(isExpanded != null);\n  const expanded = initiallyControlled.current\n    ? (isExpanded as boolean)\n    : stateExpanded;\n  const setExpanded = useCallback((n) => {\n    if (!initiallyControlled.current) {\n      setStateExpanded(n);\n    }\n  }, []);\n\n  useEffect(() => {\n    warning(\n      !(initiallyControlled.current && isExpanded == null),\n      'useCollapse is changing from controlled to uncontrolled. useCollapse should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.'\n    );\n    warning(\n      !(!initiallyControlled.current && isExpanded != null),\n      'useCollapse is changing from uncontrolled to controlled. useCollapse should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.'\n    );\n  }, [isExpanded]);\n\n  return [expanded, setExpanded];\n}\n\nexport function useEffectAfterMount(\n  cb: () => void,\n  dependencies: unknown[]\n): void {\n  const justMounted = useRef(true);\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!justMounted.current) {\n      return cb();\n    }\n    justMounted.current = false;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n\n/**\n * Taken from Reach\n * https://github.com/reach/reach-ui/blob/d2b88c50caf52f473a7d20a4493e39e3c5e95b7b/packages/auto-id\n *\n * Autogenerate IDs to facilitate WAI-ARIA and server rendering.\n *\n * Note: The returned ID will initially be `null` and will update after a\n * component mounts. Users may need to supply their own ID if they need\n * consistent values for SSR.\n *\n * @see Docs https://reach.tech/auto-id\n */\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useEffect : useLayoutEffect;\nlet serverHandoffComplete = false;\nlet id = 0;\nconst genId = () => ++id;\nexport function useUniqueId(idFromProps?: string | null) {\n  /*\n   * If this instance isn't part of the initial render, we don't have to do the\n   * double render/patch-up dance. We can just generate the ID and return it.\n   */\n  const initialId = idFromProps || (serverHandoffComplete ? genId() : null);\n\n  const [id, setId] = useState(initialId);\n\n  useIsomorphicLayoutEffect(() => {\n    if (id === null) {\n      /*\n       * Patch the ID after render. We do this in `useLayoutEffect` to avoid any\n       * rendering flicker, though it'll make the first render slower (unlikely\n       * to matter, but you're welcome to measure your app and let us know if\n       * it's a problem).\n       */\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (serverHandoffComplete === false) {\n      /*\n       * Flag all future uses of `useId` to skip the update dance. This is in\n       * `useEffect` because it goes after `useLayoutEffect`, ensuring we don't\n       * accidentally bail out of the patch-up dance prematurely.\n       */\n      serverHandoffComplete = true;\n    }\n  }, []);\n  return id != null ? String(id) : undefined;\n}\n\nexport function usePaddingWarning(element: RefObject<HTMLElement>): void {\n  // @ts-ignore\n  let warn = (el?: RefObject<HTMLElement>): void => {};\n\n  if (__DEV__) {\n    warn = (el) => {\n      if (!el?.current) {\n        return;\n      }\n      const { paddingTop, paddingBottom } = window.getComputedStyle(el.current);\n      const hasPadding =\n        (paddingTop && paddingTop !== '0px') ||\n        (paddingBottom && paddingBottom !== '0px');\n\n      warning(\n        !hasPadding,\n        'react-collapsed: Padding applied to the collapse element will cause the animation to break and not perform as expected. To fix, apply equivalent padding to the direct descendent of the collapse element.'\n      );\n    };\n  }\n\n  useEffect(() => {\n    warn(element);\n  }, [element]);\n}\n","import {\n  useState,\n  useRef,\n  useCallback,\n  TransitionEvent,\n  CSSProperties,\n} from 'react';\nimport {\n  noop,\n  callAll,\n  getElementHeight,\n  getAutoHeightDuration,\n  mergeRefs,\n  usePaddingWarning,\n  useUniqueId,\n  useEffectAfterMount,\n  useControlledState,\n} from './utils';\nimport {\n  UseCollapseInput,\n  UseCollapseOutput,\n  GetCollapsePropsOutput,\n  GetCollapsePropsInput,\n  GetTogglePropsOutput,\n  GetTogglePropsInput,\n} from './types';\nimport raf from 'raf';\n\nconst easeInOut = 'cubic-bezier(0.4, 0, 0.2, 1)';\n\nexport default function useCollapse({\n  duration,\n  easing = easeInOut,\n  collapseStyles = {},\n  expandStyles = {},\n  onExpandStart = noop,\n  onExpandEnd = noop,\n  onCollapseStart = noop,\n  onCollapseEnd = noop,\n  isExpanded: configIsExpanded,\n  defaultExpanded = false,\n  ...initialConfig\n}: UseCollapseInput = {}): UseCollapseOutput {\n  const [isExpanded, setExpanded] = useControlledState(\n    configIsExpanded,\n    defaultExpanded\n  );\n  const uniqueId = useUniqueId();\n  const el = useRef<HTMLElement | null>(null);\n  usePaddingWarning(el);\n  const collapsedHeight = `${initialConfig.collapsedHeight || 0}px`;\n  const collapsedStyles = {\n    display: collapsedHeight === '0px' ? 'none' : 'block',\n    height: collapsedHeight,\n    overflow: 'hidden',\n  };\n  const [styles, setStyles] = useState<CSSProperties>(\n    isExpanded ? {} : collapsedStyles\n  );\n  const mergeStyles = useCallback((newStyles: {}): void => {\n    setStyles((oldStyles) => ({ ...oldStyles, ...newStyles }));\n  }, []);\n\n  function getTransitionStyles(\n    height: number | string\n  ): { transition: string } {\n    const _duration = duration || getAutoHeightDuration(height);\n    return {\n      transition: `height ${_duration}ms ${easing}`,\n    };\n  }\n\n  useEffectAfterMount(() => {\n    if (isExpanded) {\n      raf(() => {\n        onExpandStart();\n        mergeStyles({\n          ...expandStyles,\n          willChange: 'height',\n          display: 'block',\n          overflow: 'hidden',\n        });\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles({\n            ...getTransitionStyles(height),\n            height,\n          });\n        });\n      });\n    } else {\n      raf(() => {\n        onCollapseStart();\n        const height = getElementHeight(el);\n        mergeStyles({\n          ...collapseStyles,\n          ...getTransitionStyles(height),\n          willChange: 'height',\n          height,\n        });\n        raf(() => {\n          mergeStyles({\n            height: collapsedHeight,\n            overflow: 'hidden',\n          });\n        });\n      });\n    }\n  }, [isExpanded]);\n\n  const handleTransitionEnd = (e: TransitionEvent): void => {\n    // Sometimes onTransitionEnd is triggered by another transition,\n    // such as a nested collapse panel transitioning. But we only\n    // want to handle this if this component's element is transitioning\n    if (e.target !== el.current || e.propertyName !== 'height') {\n      return;\n    }\n\n    // The height comparisons below are a final check before\n    // completing the transition\n    // Sometimes this callback is run even though we've already begun\n    // transitioning the other direction\n    // The conditions give us the opportunity to bail out,\n    // which will prevent the collapsed content from flashing on the screen\n    if (isExpanded) {\n      const height = getElementHeight(el);\n\n      // If the height at the end of the transition\n      // matches the height we're animating to,\n      if (height === styles.height) {\n        setStyles({});\n      } else {\n        // If the heights don't match, this could be due the height\n        // of the content changing mid-transition\n        mergeStyles({ height });\n      }\n\n      onExpandEnd();\n\n      // If the height we should be animating to matches the collapsed height,\n      // it's safe to apply the collapsed overrides\n    } else if (styles.height === collapsedHeight) {\n      setStyles(collapsedStyles);\n      onCollapseEnd();\n    }\n  };\n\n  function getToggleProps({\n    disabled = false,\n    onClick = noop,\n    ...rest\n  }: GetTogglePropsInput = {}): GetTogglePropsOutput {\n    return {\n      type: 'button',\n      role: 'button',\n      id: `react-collapsed-toggle-${uniqueId}`,\n      'aria-controls': `react-collapsed-panel-${uniqueId}`,\n      'aria-expanded': isExpanded,\n      tabIndex: 0,\n      disabled,\n      ...rest,\n      onClick: disabled ? noop : callAll(onClick, () => setExpanded((n) => !n)),\n    };\n  }\n\n  function getCollapseProps({\n    style = {},\n    onTransitionEnd = noop,\n    refKey = 'ref',\n    ...rest\n  }: GetCollapsePropsInput = {}): GetCollapsePropsOutput {\n    const theirRef: any = rest[refKey];\n    return {\n      id: `react-collapsed-panel-${uniqueId}`,\n      'aria-hidden': !isExpanded,\n      ...rest,\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: callAll(handleTransitionEnd, onTransitionEnd),\n      style: {\n        boxSizing: 'border-box',\n        // additional styles passed, e.g. getCollapseProps({style: {}})\n        ...style,\n        // style overrides from state\n        ...styles,\n      },\n    };\n  }\n\n  return {\n    getToggleProps,\n    getCollapseProps,\n    isExpanded,\n    setExpanded,\n  };\n}\n"],"names":["noop","getElementHeight","el","current","warning","scrollHeight","callAll","fns","args","forEach","fn","getAutoHeightDuration","height","constant","Math","round","assignRef","ref","value","error","Error","mergeRefs","refs","every","node","useControlledState","isExpanded","defaultExpanded","useState","stateExpanded","setStateExpanded","initiallyControlled","useRef","expanded","setExpanded","useCallback","n","useEffect","useEffectAfterMount","cb","dependencies","justMounted","useIsomorphicLayoutEffect","window","useLayoutEffect","serverHandoffComplete","id","genId","useUniqueId","idFromProps","initialId","setId","String","undefined","usePaddingWarning","element","warn","getComputedStyle","paddingTop","paddingBottom","hasPadding","easeInOut","useCollapse","duration","easing","collapseStyles","expandStyles","onExpandStart","onExpandEnd","onCollapseStart","onCollapseEnd","configIsExpanded","initialConfig","uniqueId","collapsedHeight","collapsedStyles","display","overflow","styles","setStyles","mergeStyles","newStyles","oldStyles","getTransitionStyles","_duration","transition","raf","willChange","handleTransitionEnd","e","target","propertyName","getToggleProps","disabled","onClick","rest","type","role","tabIndex","getCollapseProps","style","onTransitionEnd","refKey","theirRef","boxSizing"],"mappings":"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"}